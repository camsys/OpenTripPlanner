schema {
    query: QueryType
}

"""Long type"""
scalar Long


"""
A feed provides routing data (stops, routes, timetables, etc.) from one or more public transport agencies.
"""
type Feed {
    """ID of the feed"""
    feedId: String!

    """List of agencies which provide data to this feed"""
    agencies: [Agency]
}

"""Alert of a current or upcoming disruption in public transportation"""
type Alert implements Node {
    """
    Global object ID provided by Relay. This value can be used to refetch this object using **node** query.
    """
    id: ID!

    """hashcode from the original GTFS-RT alert"""
    alertHash: Int

    """The feed in which this alert was published"""
    feed: String

    """
    Agency affected by the disruption. Note that this value is present only if the
    disruption has an effect on all operations of the agency (e.g. in case of a strike).
    """
    agency: Agency

    """Route affected by the disruption"""
    route: Route

    """Stop affected by the disruption"""
    stop: Stop

    """Header of the alert, if available"""
    alertHeaderText: String

    """Header of the alert in all different available languages"""
    alertHeaderTextTranslations: String!

    """Long description of the alert"""
    alertDescriptionText: String!

    """Long descriptions of the alert in all different available languages"""
    alertDescriptionTextTranslations: String!

    """Url with more information"""
    alertUrl: String

    """Url with more information in all different available languages"""
    alertUrlTranslations: String!

    """Alert effect"""
    alertEffect: AlertEffectType

    """Alert cause"""
    alertCause: AlertCauseType

    """Alert severity level"""
    alertSeverityLevel: AlertSeverityLevelType

    """
    Time when this alert comes into effect. Format: Unix timestamp in seconds
    """
    effectiveStartDate: Long

    """
    Time when this alert is not in effect anymore. Format: Unix timestamp in seconds
    """
    effectiveEndDate: Long
}


"""Cause of a alert"""
enum AlertCauseType {
    """UNKNOWN_CAUSE"""
    UNKNOWN_CAUSE

    """OTHER_CAUSE"""
    OTHER_CAUSE

    """TECHNICAL_PROBLEM"""
    TECHNICAL_PROBLEM

    """STRIKE"""
    STRIKE

    """DEMONSTRATION"""
    DEMONSTRATION

    """ACCIDENT"""
    ACCIDENT

    """HOLIDAY"""
    HOLIDAY

    """WEATHER"""
    WEATHER

    """MAINTENANCE"""
    MAINTENANCE

    """CONSTRUCTION"""
    CONSTRUCTION

    """POLICE_ACTIVITY"""
    POLICE_ACTIVITY

    """MEDICAL_EMERGENCY"""
    MEDICAL_EMERGENCY
}

"""Effect of a alert"""
enum AlertEffectType {
    """NO_SERVICE"""
    NO_SERVICE

    """REDUCED_SERVICE"""
    REDUCED_SERVICE

    """SIGNIFICANT_DELAYS"""
    SIGNIFICANT_DELAYS

    """DETOUR"""
    DETOUR

    """ADDITIONAL_SERVICE"""
    ADDITIONAL_SERVICE

    """MODIFIED_SERVICE"""
    MODIFIED_SERVICE

    """OTHER_EFFECT"""
    OTHER_EFFECT

    """UNKNOWN_EFFECT"""
    UNKNOWN_EFFECT

    """STOP_MOVED"""
    STOP_MOVED

    """NO_EFFECT"""
    NO_EFFECT
}

"""Severity level of a alert"""
enum AlertSeverityLevelType {
    """Severity of alert is unknown"""
    UNKNOWN_SEVERITY

    """
    Info alerts are used for informational messages that should not have a
    significant effect on user's journey, for example: A single entrance to a
    metro station is temporarily closed.
    """
    INFO

    """
    Warning alerts are used when a single stop or route has a disruption that can
    affect user's journey, for example: All trams on a specific route are running
    with irregular schedules.
    """
    WARNING

    """
    Severe alerts are used when a significant part of public transport services is
    affected, for example: All train services are cancelled due to technical problems.
    """
    SEVERE
}


"""
Route represents a public transportation service, usually from point A to point
B and *back*, shown to customers under a single name, e.g. bus 550. Routes
contain patterns (see field `patterns`), which describe different variants of
the route, e.g. outbound pattern from point A to point B and inbound pattern
from point B to point A.
"""
type Route implements Node {
    """
    Global object ID provided by Relay. This value can be used to refetch this object using **node** query.
    """
    id: ID!

    """ID of the route in format `FeedId:RouteId`"""
    gtfsId: String!

    """Agency operating the route"""
    agency: Agency

    """Short name of the route, usually a line number, e.g. 550"""
    shortName: String

    """Long name of the route, e.g. Helsinki-Leppävaara"""
    longName: String

    """
    The raw GTFS route type as a integer. For the list of possible values, see:
    https://developers.google.com/transit/gtfs/reference/#routestxt and
    https://developers.google.com/transit/gtfs/reference/extended-route-types
    """
    type: Int
    desc: String
    url: String

    """
    The color (in hexadecimal format) the agency operating this route would prefer
    to use on UI elements (e.g. polylines on a map) related to this route. This
    value is not available for most routes.
    """
    color: String

    """
    The color (in hexadecimal format) the agency operating this route would prefer
    to use when displaying text related to this route. This value is not available
    for most routes.
    """
    textColor: String

    """List of stops on this route"""
    stops: [Stop]

    """List of alerts which have an effect on the route"""
    alerts: [Alert]
}


enum WheelchairBoarding {
    """There is no accessibility information for the stop."""
    NO_INFORMATION

    """
    At least some vehicles at this stop can be boarded by a rider in a wheelchair.
    """
    POSSIBLE

    """Wheelchair boarding is not possible at this stop."""
    NOT_POSSIBLE
}

enum NYMtaADAFlag {
	UNKNOWN
	NOT_ACCESSIBLE
	ACCESSIBLE
	PARTLY_ACCESSIBLE
}	

"""Identifies whether this stop represents a stop or station."""
enum LocationType {
    """A location where passengers board or disembark from a transit vehicle."""
    STOP

    """A physical structure or area that contains one or more stop."""
    STATION
    ENTRANCE
}

"""
Stop can represent either a single public transport stop, where passengers can
board and/or disembark vehicles, or a station, which contains multiple stops.
See field `locationType`.
"""
type Stop implements Node & PlaceInterface {
    """
    Global object ID provided by Relay. This value can be used to refetch this object using **node** query.
    """
    id: ID!

    """ÌD of the stop in format `FeedId:StopId`"""
    gtfsId: String!

    """NY MTA Complex ID"""
    mtaComplexId: String

    """NY MTA Station ID"""
    mtaStationId: String

    """NY MTA Equipment here"""
    mtaEquipment: [Equipment]

    """NY MTA's ADA Accessibility Status"""
    mtaAdaAccessible: NYMtaADAFlag

    """NY MTA's ADA Accessibility Description"""
    mtaAdaAccessibleNotes: String

    """Name of the stop, e.g. Pasilan asema"""
    name: String!

    """Latitude of the stop (WGS 84)"""
    lat: Float

    """Longitude of the stop (WGS 84)"""
    lon: Float

    """Stop code which is visible at the stop"""
    code: String

    """Description of the stop, usually a street name"""
    desc: String

    """ID of the zone where this stop is located"""
    zoneId: String
    url: String

    """Identifies whether this stop represents a stop or station."""
    locationType: LocationType

    """
    The GTFS station which this stop is part of (or null if this stop is not part of a station). 
    """
    parentStation: Stop

    """
    Whether wheelchair boarding is possible for at least some of vehicles on this stop
    """
    wheelchairBoarding: WheelchairBoarding

    direction: String

    timezone: String

    """
    The raw GTFS route type used by routes which pass through this stop. For the
    list of possible values, see:
    https://developers.google.com/transit/gtfs/reference/#routestxt and
    https://developers.google.com/transit/gtfs/reference/extended-route-types
    """
    vehicleType: Int

    """
    Identifier of the platform, usually a number. This value is only present for stops that are part of a station
    """
    platformCode: String

    """
    Returns all stops that are children of this station (Only applicable for stations)
    """
    stops: [Stop]

    """Routes which pass through this stop"""
    routes: [Route!]

    """List of alerts which have an effect on this stop"""
    alerts: [Alert]
}


"""Interface for places, e.g. stops, stations, parking areas.."""
interface PlaceInterface {
    id: ID!

    """Latitude of the place (WGS 84)"""
    lat: Float

    """Longitude of the place (WGS 84)"""
    lon: Float
}


"""Station equipment such as an escalator or elevator"""
type Equipment implements Node {
    """
    Global object ID provided by Relay. This value can be used to refetch this object using **node** query.
    """
    id: ID!

    """Equipment id"""
    mtaEquipmentId: String!

    isCurrentlyAccessible: Boolean

    """
    List of alerts which have an effect on all operations of the agency (e.g. a strike)
    """
    alerts: [Alert]
}

"""A public transport agency"""
type Agency implements Node {
    """
    Global object ID provided by Relay. This value can be used to refetch this object using **node** query.
    """
    id: ID!

    """Agency feed and id"""
    gtfsId: String!

    """Name of the agency"""
    name: String!

    """URL to the home page of the agency"""
    url: String!

    """ID of the time zone which this agency operates on"""
    timezone: String!

    lang: String

    """Phone number which customers can use to contact this agency"""
    phone: String

    """URL to a web page which has information of fares used by this agency"""
    fareUrl: String

    """List of routes operated by this agency"""
    routes: [Route]

    """
    List of alerts which have an effect on all operations of the agency (e.g. a strike)
    """
    alerts: [Alert]
    
    """NY MTA Equipment"""
    mtaEquipment: [Equipment]

}


"""An object with an ID"""
interface Node {
    """The ID of an object"""
    id: ID!
}

type PairwiseAccessibleResult {
	
	to: Stop
		
	dependsOnEquipment: [String]

	isCurrentlyAccessible: Boolean

    """
    List of alerts which have an effect on all operations of the agency (e.g. a strike)
    """
    alerts: [Alert]

}
    
type QueryType {


    """Get all feeds"""
    feeds: [Feed]


    """Get all agencies"""
    agencies: [Agency]

    """
    Get a single agency based on agency ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)
    """
    agency(id: String!): Agency

    
    """
    Get a single stop based on its ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)
    """
    stop(
        """
        GTFS Stop ID
        """
        gtfsId: String

        """
        MTA Complex ID
        """
        mtaComplexId: String

        """
        MTA Station ID
        """
        mtaStationId: String
    
    ): [Stop]

    
    """Get all active alerts"""
    alerts(
        """Only return alerts in these feeds"""
        feeds: [String!]
    ): [Alert]
    
    
    """Get all routes"""
    routes(
        """Only return routes with these ids"""
        ids: [String]

        """Query routes by this name"""
        name: String

    ): [Route]

    """
    Get a single route based on its ID, i.e. value of field `gtfsId` (format is `FeedId:RouteId`)
    """
    route(id: String!): Route


	""" 
	Shows all accessible stop pairs for the given stop/station/complex
	"""
	stopAccessibility(

        """
        Date of departure or arrival in format YYYY-MM-DD. Default value: current date
        """
        date: String

        """
        Whether to use current real-time accessibility information
        """
        includeRealtime: Boolean
        
        """
        GTFS Stop ID
        """
        gtfsId: String

        """
        MTA Complex ID
        """
        mtaComplexId: String

        """
        MTA Station ID
        """
        mtaStationId: String
        
	): [PairwiseAccessibleResult]
            
 }